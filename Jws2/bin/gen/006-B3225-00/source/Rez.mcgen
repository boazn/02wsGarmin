import Toybox.Lang;
using Toybox.WatchUi;
using Toybox.WatchUi as Ui;
using Toybox.Graphics;
using Toybox.Graphics as Gfx;

module Rez {
    module Drawables {
        (:initialized) var id_monkey as Symbol;
        (:initialized) var logoc_eng as Symbol;
        (:initialized) var logoc as Symbol;
        (:initialized) var logoDetailsLayout as Symbol;
        (:initialized) var LauncherIcon as Symbol;

        class MainBackground extends WatchUi.Drawable {

            function initialize() {
                Drawable.initialize({});
            }

            function draw(dc as Graphics.Dc) as Void {
                if (self has :isVisible) {
                    if (!self.isVisible) {
                        return;
                    }
                }

                dc.setColor(Graphics.COLOR_LT_GRAY, Graphics.COLOR_TRANSPARENT);
                dc.fillRectangle((0 + 0), (0 + 0), (260 - 0), (260 - 0));
                dc.setColor(Graphics.COLOR_TRANSPARENT, Graphics.COLOR_LT_GRAY);

                dc.setColor(Graphics.COLOR_LT_GRAY, Graphics.COLOR_TRANSPARENT);
                dc.fillRectangle(((0 + 0) + 0) + 0, ((0 + 0) + 0) + 0, ((260 - 0) * (100 / 100.0)) - (2 * 0), ((260 - 0) * (20 / 100.0)) - (2 * 0));
            }
        }
    } // Drawables

    module Fonts {
        (:initialized) var Alef27 as Symbol;
    } // Fonts

    module JsonData {
    } // JsonData

    module Layouts {
        function MainLayout(dc as Graphics.Dc) as Array<WatchUi.Drawable> {
            var rez_cmp_local_custom_drawable_MainBackground = new $.Rez.Drawables.MainBackground();
            if (rez_cmp_local_custom_drawable_MainBackground.identifier == null) {
                rez_cmp_local_custom_drawable_MainBackground.identifier = "MainBackground";
            }

            var rez_cmp_local_bitmap_logoc = new WatchUi.Bitmap({:identifier=>"logoc", :rezId=>$.Rez.Drawables.logoc, :locX=>WatchUi.LAYOUT_HALIGN_CENTER, :locY=>WatchUi.LAYOUT_VALIGN_CENTER});
            rez_cmp_local_bitmap_logoc.setLocation(((260 - rez_cmp_local_bitmap_logoc.width) * 0.5), ((260 - rez_cmp_local_bitmap_logoc.height) * 0.5));

            var rez_cmp_local_text_DateLabel = new WatchUi.Text({:identifier=>"DateLabel", :color=>Gfx.COLOR_BLACK, :locX=>(260 * 0.5), :locY=>(260 * (10 / 100.0)), :justification=>Gfx.TEXT_JUSTIFY_CENTER, :font=>Gfx.FONT_XTINY});

            var rez_cmp_local_text_TempLabel = new WatchUi.Text({:identifier=>"TempLabel", :backgroundColor=>Gfx.COLOR_LT_GRAY, :color=>Gfx.COLOR_BLACK, :locX=>(260 * (50 / 100.0)), :locY=>(260 * (20 / 100.0)), :justification=>Gfx.TEXT_JUSTIFY_CENTER, :font=>Gfx.FONT_SMALL});

            var rez_cmp_local_text_WindHumLabel = new WatchUi.Text({:identifier=>"WindHumLabel", :backgroundColor=>Gfx.COLOR_LT_GRAY, :color=>Gfx.COLOR_BLACK, :locX=>(260 * (50 / 100.0)), :locY=>(260 * (44 / 100.0)), :justification=>Gfx.TEXT_JUSTIFY_CENTER, :font=>Gfx.FONT_XTINY});

            var rez_cmp_local_text_RainLabel = new WatchUi.Text({:identifier=>"RainLabel", :backgroundColor=>Gfx.COLOR_LT_GRAY, :color=>Gfx.COLOR_BLACK, :locX=>(260 * (50 / 100.0)), :locY=>(260 * (52 / 100.0)), :justification=>Gfx.TEXT_JUSTIFY_CENTER, :font=>Gfx.FONT_XTINY});

            var rez_cmp_local_textarea_sigweatherText = new WatchUi.TextArea({:identifier=>"sigweatherText", :backgroundColor=>Gfx.COLOR_LT_GRAY, :color=>Gfx.COLOR_BLACK, :width=>260, :locY=>(260 * (60 / 100.0)), :text=>"", :justification=>Gfx.TEXT_JUSTIFY_CENTER, :height=>(260 * (50 / 100.0)), :font=>[Gfx.FONT_XTINY] as Array<Graphics.FontType>});

            return [rez_cmp_local_custom_drawable_MainBackground, rez_cmp_local_bitmap_logoc, rez_cmp_local_text_DateLabel, rez_cmp_local_text_TempLabel, rez_cmp_local_text_WindHumLabel, rez_cmp_local_text_RainLabel, rez_cmp_local_textarea_sigweatherText] as Array<WatchUi.Drawable>;
        }

        function DetailsLayout(dc as Graphics.Dc) as Array<WatchUi.Drawable> {
            var rez_cmp_local_custom_drawable_MainBackground = new $.Rez.Drawables.MainBackground();
            if (rez_cmp_local_custom_drawable_MainBackground.identifier == null) {
                rez_cmp_local_custom_drawable_MainBackground.identifier = "MainBackground";
            }

            var rez_cmp_local_bitmap_logoDetailsLayout = new WatchUi.Bitmap({:identifier=>"logoDetailsLayout", :rezId=>$.Rez.Drawables.logoDetailsLayout, :locX=>WatchUi.LAYOUT_HALIGN_CENTER, :locY=>WatchUi.LAYOUT_VALIGN_CENTER});
            rez_cmp_local_bitmap_logoDetailsLayout.setLocation(((260 - rez_cmp_local_bitmap_logoDetailsLayout.width) * 0.5), ((260 - rez_cmp_local_bitmap_logoDetailsLayout.height) * 0.5));

            var rez_cmp_local_textarea_sigweatherTextDetails = new WatchUi.TextArea({:identifier=>"sigweatherTextDetails", :backgroundColor=>Gfx.COLOR_LT_GRAY, :color=>Gfx.COLOR_BLACK, :width=>260, :locY=>(260 * (5 / 100.0)), :text=>"", :justification=>Gfx.TEXT_JUSTIFY_CENTER, :height=>260, :font=>[Gfx.FONT_SMALL,Gfx.FONT_TINY,Gfx.FONT_XTINY] as Array<Graphics.FontType>});

            return [rez_cmp_local_custom_drawable_MainBackground, rez_cmp_local_bitmap_logoDetailsLayout, rez_cmp_local_textarea_sigweatherTextDetails] as Array<WatchUi.Drawable>;
        }

        function GlanceLayout(dc as Graphics.Dc) as Array<WatchUi.Drawable> {
            var rez_cmp_local_text_sigweatherTextDetailsGlance = new WatchUi.Text({:identifier=>"sigweatherTextDetailsGlance", :locX=>(260 * 0.5), :locY=>(260 * (10 / 100.0)), :justification=>Gfx.TEXT_JUSTIFY_CENTER, :font=>Gfx.FONT_SYSTEM_XTINY});

            return [rez_cmp_local_text_sigweatherTextDetailsGlance] as Array<WatchUi.Drawable>;
        }
    } // Layouts

    module Menus {
    } // Menus

    module Strings {
        (:initialized) var CorF as Symbol;
        (:initialized) var rain as Symbol;
        (:initialized) var AppVersionTitle as Symbol;
        (:initialized) var C as Symbol;
        (:initialized) var Hebrew as Symbol;
        (:initialized) var F as Symbol;
        (:initialized) var night as Symbol;
        (:initialized) var language as Symbol;
        (:initialized) var rainchance as Symbol;
        (:initialized) var AppName as Symbol;
        (:initialized) var morning as Symbol;
        (:initialized) var English as Symbol;
        (:initialized) var noon as Symbol;
        (:initialized) var Mountain as Symbol;
        (:initialized) var Valley as Symbol;
        (:initialized) var language_label as Symbol;
    } // Strings
} // Rez
